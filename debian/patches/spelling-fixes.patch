Description: Trivial spelling fixes
Author: Stephen Kitt <steve@sk2.org>

--- a/mingw-w64-tools/gendef/src/gendef.c
+++ b/mingw-w64-tools/gendef/src/gendef.c
@@ -115,7 +115,7 @@
     {
       if (!next)
         {
-	  fprintf (stderr, "Error: %s expects path as next arguement.", opts);
+	  fprintf (stderr, "Error: %s expects path as next argument.", opts);
 	  return 0;
         }
       gendef_addpath_def (next);
--- a/mingw-w64-libraries/libmangle/src/m_ms.c
+++ b/mingw-w64-libraries/libmangle/src/m_ms.c
@@ -691,7 +691,7 @@
               return m_oper (c, m_rtti (c, "complete_object_locator"));
           }
         DEC_CHAR (c);
-        fprintf (stderr, " *** Unkown RTTI %c\n", ch);
+        fprintf (stderr, " *** Unknown RTTI %c\n", ch);
         c->err = 2;
         return NULL;
       case 'S':
--- a/mingw-w64-tools/genpeimg/src/img_pe.c
+++ b/mingw-w64-tools/genpeimg/src/img_pe.c
@@ -227,7 +227,7 @@
       fprintf (outfp, "\n");
     }
   fprintf (outfp, "PE+ optional header information\n"
-    "  Linker version %u.%u, Code size: 0x%x, Intialized Data size: 0x%x\n"
+    "  Linker version %u.%u, Code size: 0x%x, Initialized Data size: 0x%x\n"
     "  Uninitialized Data size: 0x%x, Entry-point 0x%x\n",
       PEIMG_GET_UCHAR (ppeimg, ppeimg->optional_hdr_pos + 2),
       PEIMG_GET_UCHAR (ppeimg, ppeimg->optional_hdr_pos + 3),
@@ -284,7 +284,7 @@
     case 14: fprintf (outfp, "XBOX (14)\n"); break;
     case 16: fprintf (outfp, "Windows Boot Application (16)\n"); break;
     default:
-      fprintf (outfp, "Unkown (%u)\n", PEIMG_GET_USHORT (ppeimg, ppeimg->optional_hdr_pos + 68));
+      fprintf (outfp, "Unknown (%u)\n", PEIMG_GET_USHORT (ppeimg, ppeimg->optional_hdr_pos + 68));
       break;
     }
   hdr_cha = PEIMG_GET_USHORT (ppeimg, ppeimg->optional_hdr_pos + 70);
